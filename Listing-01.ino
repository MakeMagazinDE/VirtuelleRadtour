<isol>@li:// Definition des Eingangspinsint RPM_INPUT = 8; // Gloabale Variablen int rpmState, lastRpmState;  // Hält den letzten Zustand des Eingangspins unsigned long lastMillis;    // Hält den letzten Zeitpunkt eines Pulsesunsigned long lastWriteTime; // Letzte Zeitpunkt eines gesendeten Bytesunsigned long deltaT=255;  // Zeitlicher Abstand zweier gemessenen Pulse// Initialisierung des Eingangspins und der seriellen Schnittstellevoid setup() {   pinMode(RPM_INPUT, INPUT);   Serial.begin(9600); } // Diese Funktion wird permanent wiederholt, misst die Zeit zwischen zwei Pulsen und sendet sie als byte an den PC.void loop() {   int state;   unsigned long speedByte;   unsigned long newMillis;     // lese signal von pin 8   rpmState = digitalRead(RPM_INPUT);   if (rpmState < lastRpmState) {     // fallende Flanke detektiert      newMillis = millis();      deltaT = newMillis - lastMillis;      lastMillis = newMillis;      if (deltaT > 510) deltaT = 510;  // sicherstellen, dass die Zeit                                       // nicht größer als 511 ist  }     lastRpmState = rpmState;   if (millis()-lastWriteTime > 100) { // Alle 100ms einen Wert auf die                                       //serielle Schnittstelle schreiben     speedByte = deltaT / 2;   // Zeit wird also immer im Bereich von                                // 0...255 liegen.     Serial.print((char) speedByte);      lastWriteTime = millis();      deltaT += 5;    // Wenn keine Pulse kommen, dann läuft deltaT                      // langsam auf den Maximalwert hoch. Macht man das                      // nicht, dann bleibt deltaT auf dem letzten Wert                      // stehen bevor die Pulse ausgeblieben sind. So wäre                     // es nicht möglich stehen zu bleiben.      if (deltaT > 510) deltaT = 510;   } } 